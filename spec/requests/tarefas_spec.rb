require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/tarefas", type: :request do

  # This should return the minimal set of attributes required to create a valid
  # Tarefa. As you add validations to Tarefa, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    {
      titulo: "Tarefa 1",
      descricao: "Descrição da Tarefa 1",
      categoria: "Categoria 1",
      data_vencimento: Date.tomorrow
    }
  }

  # Atributos inválidos para uma Tarefa
  let(:invalid_attributes) {
    {
      titulo: "", # Título em branco, inválido
      descricao: "", # Descrição em branco, inválida
      categoria: "", # Categoria em branco, inválida
      data_vencimento: "", # Data de vencimento em branco, inválida
    }
  }

  describe "GET /index" do
    it "renders a successful response" do
      Tarefa.create! valid_attributes
      get tarefas_url
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      tarefa = Tarefa.create! valid_attributes
      get tarefa_url(tarefa)
      expect(response).to be_successful
    end
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_tarefa_url
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "renders a successful response" do
      tarefa = Tarefa.create! valid_attributes
      get edit_tarefa_url(tarefa)
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Tarefa" do
        expect {
          post tarefas_url, params: { tarefa: valid_attributes }
        }.to change(Tarefa, :count).by(1)
      end

      it "redirects to the created tarefa" do
        post tarefas_url, params: { tarefa: valid_attributes }
        expect(response).to redirect_to(tarefa_url(Tarefa.last))
      end
    end

    context "with invalid parameters" do
      it "does not create a new Tarefa" do
        expect {
          post tarefas_url, params: { tarefa: invalid_attributes }
        }.to change(Tarefa, :count).by(0)
      end


      it "renders a response with 422 status (i.e. to display the 'new' template)" do
        post tarefas_url, params: { tarefa: invalid_attributes }
        expect(response).to have_http_status(:unprocessable_entity)
      end

    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) {
        {
          titulo: "Tarefa atualizada",
          descricao: "Nova descrição da Tarefa",
          categoria: "Nova Categoria",
          data_vencimento: Date.today + 3.days
        }
      }

      it "redirects to the tarefa" do
        tarefa = Tarefa.create! valid_attributes
        patch tarefa_url(tarefa), params: { tarefa: new_attributes }
        tarefa.reload
        expect(response).to redirect_to(tarefa_url(tarefa))
      end
    end

    context "with invalid parameters" do

      it "renders a response with 422 status (i.e. to display the 'edit' template)" do
        tarefa = Tarefa.create! valid_attributes
        patch tarefa_url(tarefa), params: { tarefa: invalid_attributes }
        expect(response).to have_http_status(:unprocessable_entity)
      end

    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested tarefa" do
      tarefa = Tarefa.create! valid_attributes
      expect {
        delete tarefa_url(tarefa)
      }.to change(Tarefa, :count).by(-1)
    end

    it "redirects to the tarefas list" do
      tarefa = Tarefa.create! valid_attributes
      delete tarefa_url(tarefa)
      expect(response).to redirect_to(tarefas_url)
    end
  end
end
